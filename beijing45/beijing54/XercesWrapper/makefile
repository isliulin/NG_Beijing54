#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.135                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = 
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_RELEASE =  $(INC)
CFLAGS_RELEASE =  $(CFLAGS) -fPIC -fopenmp
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE =  $(LDFLAGS) -fopenmp
OBJDIR_RELEASE = Release
DEP_RELEASE = 
OUT_RELEASE = ../LRelease/XercesWrapper.so

OBJ_RELEASE = $(OBJDIR_RELEASE)/tinyxmlparser.o $(OBJDIR_RELEASE)/tinyxmlerror.o $(OBJDIR_RELEASE)/tinyxml.o $(OBJDIR_RELEASE)/tinystr.o $(OBJDIR_RELEASE)/XmlStringManager.o $(OBJDIR_RELEASE)/XMLValue.o $(OBJDIR_RELEASE)/XMLNode.o $(OBJDIR_RELEASE)/XMLDocument.o

all: release

clean: clean_release

before_release: 
	test -d ../LRelease || mkdir -p ../LRelease
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) -shared $(LDFLAGS_RELEASE) $(LIBDIR_RELEASE) $(OBJ_RELEASE) $(LIB_RELEASE) -o $(OUT_RELEASE)

$(OBJDIR_RELEASE)/tinyxmlparser.o: tinyxmlparser.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tinyxmlparser.cpp -o $(OBJDIR_RELEASE)/tinyxmlparser.o

$(OBJDIR_RELEASE)/tinyxmlerror.o: tinyxmlerror.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tinyxmlerror.cpp -o $(OBJDIR_RELEASE)/tinyxmlerror.o

$(OBJDIR_RELEASE)/tinyxml.o: tinyxml.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tinyxml.cpp -o $(OBJDIR_RELEASE)/tinyxml.o

$(OBJDIR_RELEASE)/tinystr.o: tinystr.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tinystr.cpp -o $(OBJDIR_RELEASE)/tinystr.o

$(OBJDIR_RELEASE)/XmlStringManager.o: XmlStringManager.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c XmlStringManager.cpp -o $(OBJDIR_RELEASE)/XmlStringManager.o

$(OBJDIR_RELEASE)/XMLValue.o: XMLValue.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c XMLValue.cpp -o $(OBJDIR_RELEASE)/XMLValue.o

$(OBJDIR_RELEASE)/XMLNode.o: XMLNode.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c XMLNode.cpp -o $(OBJDIR_RELEASE)/XMLNode.o

$(OBJDIR_RELEASE)/XMLDocument.o: XMLDocument.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c XMLDocument.cpp -o $(OBJDIR_RELEASE)/XMLDocument.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_release after_release clean_release

